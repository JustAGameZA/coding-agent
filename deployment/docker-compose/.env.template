# ==============================================
# Coding Agent - Environment Variables Template
# ==============================================
#
# Copy this file to .env and customize with your actual values:
#   cp .env.template .env
#
# IMPORTANT: .env is git-ignored. Never commit secrets!

# ==============================================
# Database Configuration
# ==============================================
POSTGRES_USER=codingagent
POSTGRES_PASSWORD=devPassword123!
POSTGRES_DB=codingagent

# ==============================================
# Redis Configuration
# ==============================================
REDIS_PASSWORD=devPassword123!

# ==============================================
# RabbitMQ Configuration
# ==============================================
RABBITMQ_USER=codingagent
RABBITMQ_PASSWORD=devPassword123!
RABBITMQ_VHOST=/

# ==============================================
# Grafana Configuration
# ==============================================
GRAFANA_USER=admin
GRAFANA_PASSWORD=admin

# ==============================================
# GitHub Integration (Optional)
# ==============================================
# Required for GitHub Service operations
# Create a GitHub App: https://github.com/settings/apps
GITHUB_APP_ID=
GITHUB_INSTALLATION_ID=
# Base64 encoded private key
GITHUB_PRIVATE_KEY=

# ==============================================
# JWT Authentication (Production)
# ==============================================
# Generate: openssl rand -base64 32
JWT_SECRET_KEY=
JWT_ISSUER=coding-agent
JWT_AUDIENCE=coding-agent-api
JWT_EXPIRES_MINUTES=60

# ==============================================
# OpenAI / LLM Configuration (Optional)
# ==============================================
# For cloud LLM services (alternative to Ollama)
OPENAI_API_KEY=
ANTHROPIC_API_KEY=

# ==============================================
# Application Settings
# ==============================================
ASPNETCORE_ENVIRONMENT=Development
LOG_LEVEL=Information

# ==============================================
# Rate Limiting
# ==============================================
RATE_LIMIT_WINDOW_SECONDS=60
RATE_LIMIT_MAX_REQUESTS=100

# ==============================================
# Docker Configuration
# ==============================================
COMPOSE_PROJECT_NAME=coding-agent
DOCKER_BUILDKIT=1

# ==============================================
# Development Settings
# ==============================================
# Enable hot reload (only for dev mode)
DOTNET_USE_POLLING_FILE_WATCHER=true
CHOKIDAR_USEPOLLING=true

# ==============================================
# Monitoring & Observability
# ==============================================
OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
SEQ_SERVER_URL=http://seq:5341
PROMETHEUS_SCRAPE_INTERVAL=15s

# ==============================================
# Security (Production Only)
# ==============================================
# Enable HTTPS redirection
HTTPS_ENABLED=false
SSL_CERTIFICATE_PATH=
SSL_CERTIFICATE_PASSWORD=

# Enable CORS (comma-separated origins)
CORS_ALLOWED_ORIGINS=http://localhost:4200,http://localhost:5000

# ==============================================
# Advanced Configuration
# ==============================================
# Connection pool sizes
DB_MIN_POOL_SIZE=5
DB_MAX_POOL_SIZE=100

# Redis cache TTL (seconds)
REDIS_CACHE_TTL=3600

# RabbitMQ prefetch count
RABBITMQ_PREFETCH_COUNT=10

# ML Classifier timeout (milliseconds)
ML_CLASSIFIER_TIMEOUT=5000

# Browser automation timeout (seconds)
BROWSER_TIMEOUT=30

# ==============================================
# Feature Flags
# ==============================================
FEATURE_ML_CLASSIFICATION=true
FEATURE_BROWSER_AUTOMATION=true
FEATURE_AUTOMATED_FIXES=true
FEATURE_OLLAMA_INTEGRATION=true
