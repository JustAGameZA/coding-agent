# ============================================
# Environment Configuration - Example
# Coding Agent - Microservices Platform
# ============================================
# 
# IMPORTANT: Copy this file to .env and update with your values
# cp .env.example .env
# 
# DO NOT commit .env file to version control
# ============================================

# ==========================================
# PostgreSQL Configuration
# ==========================================
POSTGRES_USER=codingagent
POSTGRES_PASSWORD=devPassword123!
POSTGRES_DB=codingagent
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# Connection string format for .NET services:
# PostgreSQL_ConnectionString=Host=${POSTGRES_HOST};Port=${POSTGRES_PORT};Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}

# ==========================================
# Redis Configuration
# ==========================================
REDIS_PASSWORD=devPassword123!
REDIS_HOST=redis
REDIS_PORT=6379

# Connection string format for .NET services:
# Redis_ConnectionString=${REDIS_HOST}:${REDIS_PORT},password=${REDIS_PASSWORD}

# ==========================================
# RabbitMQ Configuration
# ==========================================
RABBITMQ_USER=codingagent
RABBITMQ_PASSWORD=devPassword123!
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672
RABBITMQ_MANAGEMENT_PORT=15672
RABBITMQ_VHOST=/

# Connection string format for MassTransit:
# RabbitMQ_ConnectionString=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}:${RABBITMQ_PORT}/${RABBITMQ_VHOST}

# ==========================================
# Observability - Prometheus
# ==========================================
PROMETHEUS_PORT=9090
PROMETHEUS_RETENTION_DAYS=30

# ==========================================
# Observability - Grafana
# ==========================================
GRAFANA_USER=admin
GRAFANA_PASSWORD=admin
GRAFANA_PORT=3000

# IMPORTANT: Change default password in production!

# ==========================================
# Observability - Jaeger
# ==========================================
JAEGER_UI_PORT=16686
JAEGER_COLLECTOR_PORT=14268
JAEGER_OTLP_GRPC_PORT=4317
JAEGER_OTLP_HTTP_PORT=4318

# OpenTelemetry endpoint for services:
# OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:${JAEGER_OTLP_GRPC_PORT}

# ==========================================
# Observability - Seq
# ==========================================
SEQ_PORT=5341
SEQ_INGESTION_PORT=5342

# Optional: Pre-hashed password for first run
# Generate using: echo '<your-password>' | docker run --rm -i datalust/seq config hash
SEQ_PASSWORD_HASH=

# Seq ingestion endpoint for services:
# Seq_ServerUrl=http://seq:${SEQ_PORT}

# ==========================================
# API Gateway Configuration
# ==========================================
GATEWAY_PORT=5000
GATEWAY_HTTPS_PORT=5001

# ==========================================
# Service Ports
# ==========================================
CHAT_SERVICE_PORT=5001
ORCHESTRATION_SERVICE_PORT=5002
ML_CLASSIFIER_SERVICE_PORT=5003
GITHUB_SERVICE_PORT=5004
BROWSER_SERVICE_PORT=5005
CICD_MONITOR_SERVICE_PORT=5006
DASHBOARD_SERVICE_PORT=5007

# ==========================================
# Frontend Configuration
# ==========================================
FRONTEND_PORT=4200
ANGULAR_APP_API_URL=http://localhost:${GATEWAY_PORT}

# ==========================================
# Authentication & Security
# ==========================================
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production-min-32-chars
JWT_ISSUER=CodingAgent
JWT_AUDIENCE=CodingAgent.Services
JWT_EXPIRATION_MINUTES=60

# ==========================================
# GitHub Integration
# ==========================================
GITHUB_TOKEN=ghp_your_github_personal_access_token
GITHUB_APP_ID=
GITHUB_APP_PRIVATE_KEY=
GITHUB_WEBHOOK_SECRET=your_webhook_secret

# ==========================================
# External Services
# ==========================================
# OpenAI/Azure OpenAI for AI features
OPENAI_API_KEY=sk-your-openai-api-key
AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/
AZURE_OPENAI_KEY=your-azure-openai-key
AZURE_OPENAI_DEPLOYMENT_NAME=gpt-4

# ==========================================
# Application Configuration
# ==========================================
ASPNETCORE_ENVIRONMENT=Production
DOTNET_ENVIRONMENT=Production
PYTHONUNBUFFERED=1

# Correlation ID header name
CORRELATION_ID_HEADER=X-Correlation-Id

# ==========================================
# Logging Configuration
# ==========================================
LOG_LEVEL=Information
SEQ_LOG_LEVEL=Information

# ==========================================
# Performance & Scaling
# ==========================================
# Connection pool sizes
POSTGRES_MAX_POOL_SIZE=100
REDIS_MAX_POOL_SIZE=50

# Rate limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=100

# Circuit breaker settings
CIRCUIT_BREAKER_FAILURE_THRESHOLD=5
CIRCUIT_BREAKER_TIMEOUT_SECONDS=30

# ==========================================
# Feature Flags
# ==========================================
FEATURE_ML_CLASSIFICATION_ENABLED=true
FEATURE_BROWSER_AUTOMATION_ENABLED=true
FEATURE_GITHUB_INTEGRATION_ENABLED=true
FEATURE_CICD_MONITORING_ENABLED=true

# ==========================================
# Monitoring & Health Checks
# ==========================================
HEALTH_CHECK_INTERVAL_SECONDS=30
HEALTH_CHECK_TIMEOUT_SECONDS=10

# ==========================================
# Docker & Deployment
# ==========================================
COMPOSE_PROJECT_NAME=coding-agent
COMPOSE_FILE=docker-compose.yml

# Container restart policy
RESTART_POLICY=unless-stopped

# ==========================================
# Development Settings (for docker-compose.dev.yml)
# ==========================================
# HOT_RELOAD_ENABLED=true
# DEBUG_MODE=true
# ENABLE_SWAGGER=true
