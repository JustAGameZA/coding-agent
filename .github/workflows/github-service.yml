name: GitHub Service CI

on:
  workflow_dispatch:
  push:
    paths:
      - 'src/Services/GitHub/**'
      - 'src/SharedKernel/**'
      - 'CodingAgent.sln'
      - 'Directory.Build.props'
      - 'global.json'
  pull_request:
    paths:
      - 'src/Services/GitHub/**'
      - 'src/SharedKernel/**'
      - 'CodingAgent.sln'
      - 'Directory.Build.props'
      - 'global.json'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      github: ${{ steps.filter.outputs.github }}
      dockerfile: ${{ steps.filter.outputs.dockerfile }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            github:
              - 'src/Services/GitHub/**'
              - 'src/SharedKernel/**'
              - 'CodingAgent.sln'
              - 'Directory.Build.props'
              - 'global.json'
            dockerfile:
              - 'src/Services/GitHub/**/Dockerfile'
              - 'src/Services/GitHub/**/.dockerignore'

  build-test:
    needs: check-changes
    if: needs.check-changes.outputs.github == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json', '**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Clean NuGet cache on corruption
        if: failure()
        run: dotnet nuget locals all --clear

      - name: Restore
        run: dotnet restore CodingAgent.sln --force

      - name: Build
        run: dotnet build CodingAgent.sln -c Release --no-restore

      - name: Test (Unit only)
        run: >-
          dotnet test CodingAgent.sln -c Release --no-build --no-restore
          --settings ./.runsettings --filter "Category=Unit"
          --logger "trx;LogFileName=test_results.trx"

      - name: Conditional Docker build
        run: |
          set -e
          if [ -f src/Services/GitHub/CodingAgent.Services.GitHub/Dockerfile ]; then
            echo "Dockerfile found. Building image from repository root..."
            REPO=$(echo "$GITHUB_REPOSITORY" | tr '[:upper:]' '[:lower:]')
            docker build -f src/Services/GitHub/CodingAgent.Services.GitHub/Dockerfile -t ghcr.io/$REPO/github-service:$GITHUB_SHA .
          else
            echo "No Dockerfile found for GitHub Service. Skipping docker build."
          fi
