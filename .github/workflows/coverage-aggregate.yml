name: Coverage Aggregate

on:
  push:
    branches: [ master ]
    paths:
      - 'src/**/*.cs'
      - 'src/**/*.py'
      - 'src/**/*Tests/**'
      - 'src/**/*Test/**'
      - 'src/**/*.csproj'
      - 'src/**/*.pyproj'
      - 'CodingAgent.sln'
      - 'Directory.Build.props'
      - 'global.json'
      - '.github/workflows/coverage-aggregate.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'src/**/*.cs'
      - 'src/**/*.py'
      - 'src/**/*Tests/**'
      - 'src/**/*Test/**'
      - 'src/**/*.csproj'
      - 'src/**/*.pyproj'
      - 'CodingAgent.sln'
      - 'Directory.Build.props'
      - 'global.json'
      - '.github/workflows/coverage-aggregate.yml'

concurrency:
  group: coverage-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      dotnet: ${{ steps.filter.outputs.dotnet }}
      python: ${{ steps.filter.outputs.python }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            dotnet:
              - 'src/**/*.cs'
              - 'src/**/*.csproj'
              - 'CodingAgent.sln'
              - 'Directory.Build.props'
              - 'global.json'
            python:
              - 'src/**/*.py'
              - 'src/**/requirements.txt'
              - 'src/**/setup.py'
              - 'src/**/pyproject.toml'

  aggregate:
    name: Build, test, and merge coverage
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.dotnet == 'true' || needs.check-changes.outputs.python == 'true'
    timeout-minutes: 30
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: '1'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        if: needs.check-changes.outputs.dotnet == 'true'
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Cache NuGet packages
        if: needs.check-changes.outputs.dotnet == 'true'
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json', '**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore .NET
        if: needs.check-changes.outputs.dotnet == 'true'
        run: dotnet restore CodingAgent.sln

      - name: Test .NET with coverage (Cobertura, Unit only)
        if: needs.check-changes.outputs.dotnet == 'true'
        run: |
          dotnet test CodingAgent.sln \
            --logger "trx" \
            --collect:"XPlat Code Coverage" \
            --filter "Category=Unit" \
            --settings ./.runsettings \
            --verbosity quiet --nologo

      - name: Find .NET Cobertura files
        if: needs.check-changes.outputs.dotnet == 'true'
        id: find_cobertura
        shell: bash
        run: |
          mapfile -t files < <(ls -1 src/**/TestResults/*/coverage.cobertura.xml 2>/dev/null || true)
          echo "Found ${#files[@]} Cobertura files"
          printf 'files<<EOF\n%s\nEOF\n' "${files[*]}" >> "$GITHUB_OUTPUT"

      - name: Setup Python 3.12
        if: needs.check-changes.outputs.python == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: 'src/Services/MLClassifier/ml_classifier_service/requirements.txt'

      - name: Install Python test deps
        if: needs.check-changes.outputs.python == 'true'
        working-directory: src/Services/MLClassifier/ml_classifier_service
        run: |
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest pytest-cov

      - name: Run Python tests with coverage (Cobertura XML)
        if: needs.check-changes.outputs.python == 'true'
        working-directory: src/Services/MLClassifier/ml_classifier_service
        run: |
          if [ -d tests/ ] && [ "$(ls -A tests/ 2>/dev/null)" ]; then
            pytest tests/ -q --maxfail=1 --disable-warnings \
              --cov=. --cov-report=xml:coverage-python.xml
          else
            echo "No Python tests found. Skipping."
            touch coverage-python.xml
          fi
        continue-on-error: true

      - name: Merge coverage with ReportGenerator
        if: always() && (needs.check-changes.outputs.dotnet == 'true' || needs.check-changes.outputs.python == 'true')
        uses: danielpalme/ReportGenerator-GitHub-Action@v5
        with:
          reports: 'src/**/TestResults/**/coverage.cobertura.xml;src/Services/MLClassifier/ml_classifier_service/coverage-python.xml'
          targetdir: coverage-merged
          reporttypes: 'Cobertura;HtmlSummary;MarkdownSummaryGithub'
          assemblyfilters: '+*'
          classfilters: '+*'

      - name: Publish merged Cobertura to summary
        if: always() && (needs.check-changes.outputs.dotnet == 'true' || needs.check-changes.outputs.python == 'true')
        shell: bash
        run: |
          if [ -f coverage-merged/SummaryGithub.md ]; then
            cat coverage-merged/SummaryGithub.md >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Upload merged coverage artifact
        if: always() && (needs.check-changes.outputs.dotnet == 'true' || needs.check-changes.outputs.python == 'true')
        uses: actions/upload-artifact@v4
        with:
          name: coverage-merged
          path: |
            coverage-merged/
          if-no-files-found: warn
