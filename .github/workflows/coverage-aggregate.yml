name: Coverage Aggregate

on:
  push:
    branches: [ master ]
    paths:
      - 'src/**'
      - '.github/workflows/coverage-aggregate.yml'
  pull_request:
    branches: [ master ]
    paths:
      - 'src/**'
      - '.github/workflows/coverage-aggregate.yml'

concurrency:
  group: coverage-${{ github.ref }}
  cancel-in-progress: true

jobs:
  aggregate:
    name: Build, test, and merge coverage
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: '1'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json', '**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore .NET
        run: dotnet restore CodingAgent.sln

      - name: Test .NET with coverage (Cobertura, Unit only)
        run: |
          dotnet test CodingAgent.sln \
            --logger "trx" \
            --collect:"XPlat Code Coverage" \
            --filter "Category=Unit" \
            --settings ./.runsettings \
            --verbosity quiet --nologo

      - name: Find .NET Cobertura files
        id: find_cobertura
        shell: bash
        run: |
          mapfile -t files < <(ls -1 src/**/TestResults/*/coverage.cobertura.xml 2>/dev/null || true)
          echo "Found ${#files[@]} Cobertura files"
          printf 'files<<EOF\n%s\nEOF\n' "${files[*]}" >> "$GITHUB_OUTPUT"

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: 'src/Services/MLClassifier/ml_classifier_service/requirements.txt'

      - name: Install Python test deps
        working-directory: src/Services/MLClassifier/ml_classifier_service
        run: |
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest pytest-cov

      - name: Run Python tests with coverage (Cobertura XML)
        working-directory: src/Services/MLClassifier/ml_classifier_service
        run: |
          pytest tests/ -q --maxfail=1 --disable-warnings \
            --cov=. --cov-report=xml:coverage-python.xml

      - name: Merge coverage with ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@v5
        with:
          reports: 'src/**/TestResults/**/coverage.cobertura.xml;src/Services/MLClassifier/ml_classifier_service/coverage-python.xml'
          targetdir: coverage-merged
          reporttypes: 'Cobertura;HtmlSummary;MarkdownSummaryGithub'
          assemblyfilters: '+*'
          classfilters: '+*'

      - name: Publish merged Cobertura to summary
        shell: bash
        run: |
          if [ -f coverage-merged/SummaryGithub.md ]; then
            cat coverage-merged/SummaryGithub.md >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Upload merged coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-merged
          path: |
            coverage-merged/
          if-no-files-found: warn
