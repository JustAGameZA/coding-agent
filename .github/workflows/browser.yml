name: Browser Service CI

on:
  workflow_dispatch:
  push:
    paths:
      - 'src/Services/Browser/**'
      - 'src/SharedKernel/**'
      - 'CodingAgent.sln'
      - 'Directory.Build.props'
      - 'global.json'
  pull_request:
    paths:
      - 'src/Services/Browser/**'
      - 'src/SharedKernel/**'
      - 'CodingAgent.sln'
      - 'Directory.Build.props'
      - 'global.json'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json', '**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore CodingAgent.sln

      - name: Build
        run: dotnet build CodingAgent.sln -c Release --no-restore

      - name: Install Playwright browsers
        run: |
          # Install PowerShell if not present
          if ! command -v pwsh &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y powershell
          fi
          # Build the Browser service to get playwright.ps1
          dotnet build src/Services/Browser/CodingAgent.Services.Browser/CodingAgent.Services.Browser.csproj -c Release --no-restore
          # Find and install Playwright browsers
          PLAYWRIGHT_SCRIPT=$(find src/Services/Browser -name "playwright.ps1" -path "*/bin/Release/*" | head -n 1)
          if [ -z "$PLAYWRIGHT_SCRIPT" ]; then
            echo "Error: playwright.ps1 not found"
            exit 1
          fi
          echo "Using Playwright script: $PLAYWRIGHT_SCRIPT"
          pwsh "$PLAYWRIGHT_SCRIPT" install chromium firefox --with-deps

      - name: Test (Unit)
        run: dotnet test CodingAgent.sln -c Release --no-build --filter "Category=Unit" --logger "trx;LogFileName=unit_test_results.trx"

      - name: Test (Integration)
        run: dotnet test CodingAgent.sln -c Release --no-build --filter "Category=Integration" --logger "trx;LogFileName=integration_test_results.trx"

      - name: Conditional Docker build
        run: |
          set -e
          if [ -f src/Services/Browser/CodingAgent.Services.Browser/Dockerfile ]; then
            echo "Dockerfile found. Building image from repository root..."
            REPO=$(echo "$GITHUB_REPOSITORY" | tr '[:upper:]' '[:lower:]')
            docker build -f src/Services/Browser/CodingAgent.Services.Browser/Dockerfile -t ghcr.io/$REPO/browser:$GITHUB_SHA .
          else
            echo "No Dockerfile found for Browser. Skipping docker build."
          fi
