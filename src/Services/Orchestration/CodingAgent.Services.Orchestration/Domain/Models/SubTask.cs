namespace CodingAgent.Services.Orchestration.Domain.Models;

/// <summary>
/// Represents a subtask within a larger coding task, created by the planner agent.
/// </summary>
public class SubTask
{
    public required string Id { get; init; }
    public required string Title { get; init; }
    public required string Description { get; init; }
    public required List<string> AffectedFiles { get; init; }
    public int EstimatedComplexity { get; init; } // 1-10 scale
    public List<string> Dependencies { get; init; } = new();
}

/// <summary>
/// Represents a plan generated by the planner agent.
/// </summary>
public class TaskPlan
{
    public required List<SubTask> SubTasks { get; init; }
    public required string Strategy { get; init; }
    public string? Notes { get; init; }
}

/// <summary>
/// Represents the result of an agent's work.
/// </summary>
public class AgentResult
{
    public required string AgentName { get; init; }
    public bool Success { get; init; }
    public List<CodeChange> Changes { get; init; } = new();
    public int TokensUsed { get; init; }
    public decimal Cost { get; init; }
    public TimeSpan Duration { get; init; }
    public List<string> Errors { get; init; } = new();
    public string? Output { get; init; }
}

/// <summary>
/// Represents a review result from the reviewer agent.
/// </summary>
public class ReviewResult
{
    public bool IsApproved { get; init; }
    public List<string> Issues { get; init; } = new();
    public List<string> Suggestions { get; init; } = new();
    public int Severity { get; init; } // 1-5, where 5 is critical
}
